###############################################################################
# ---------- Stage 0 : build Conda env + compile Medusa -----------------------
###############################################################################
FROM nvidia/cuda:12.4.1-devel-ubuntu22.04 AS builder

ARG MICROMAMBA_VERSION=2.3.0
ENV  DEBIAN_FRONTEND=noninteractive \
     MAMBA_ROOT_PREFIX=/opt/conda \
     PATH=/opt/conda/bin:/usr/local/cuda/bin:$PATH \
     TZ=UTC

RUN apt-get update && \
    apt-get install -y --no-install-recommends curl ca-certificates bzip2 git && \
    rm -rf /var/lib/apt/lists/*

# ---- micromamba (single static binary) ------------------------------------
RUN curl -L "https://micro.mamba.pm/api/micromamba/linux-64/${MICROMAMBA_VERSION}" \
    | tar -xvj -C /usr/local/bin/ --strip-components=1 bin/micromamba

# ---- create env from your YAML -------------------------------------------
COPY environment.yml /tmp/environment.yml
RUN micromamba env create -y -f /tmp/environment.yml && \
    micromamba clean --all --yes

ENV ENV_NAME=medusa

# ---- build flash-attn (needs nvcc) ----------------------------------------
RUN micromamba run -n medusa \
    pip install --no-cache-dir flash-attn==2.8.0.post2

# ---- copy your source & install it ----------------------------------------
#  â–¸ put these two lines *after* the env to leverage Docker layer caching:
COPY . /workspace/medusa
WORKDIR /workspace/medusa
RUN micromamba run -n medusa pip install --no-deps -e .

###############################################################################
# ---------- Stage 1 : runtime (small, still CUDA 12.4) ----------------------
###############################################################################
FROM nvidia/cuda:12.4.1-runtime-ubuntu22.04

ENV  MAMBA_ROOT_PREFIX=/opt/conda \
     PATH=/opt/conda/bin:/usr/local/cuda/bin:$PATH \
     TZ=UTC

# bring Conda env & micromamba binary
COPY --from=builder /opt/conda /opt/conda
COPY --from=builder /usr/local/bin/micromamba /usr/local/bin/micromamba
COPY --from=builder /usr/local/cuda /usr/local/cuda

# optional: copy only runtime assets (data/config); comment if you
#           prefer the full editable source inside the image.
COPY --from=builder /workspace/medusa /workspace/medusa

# tiny helpers
RUN apt-get update && \
    apt-get install -y --no-install-recommends git curl && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /workspace/medusa

# default: interactive shell with env already active
CMD ["/bin/bash"] 
